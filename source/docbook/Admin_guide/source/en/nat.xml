<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<!-- The XSL transform inserts these values as Hugo frontmatter. -->
<!-- Additionally, a "date" timestamp is inserted by the stylesheet. -->
<?title ?> 
<?linkTitle "Using with NAT" ?>  <!-- Section menu link text -->
<?url "docs/admin_guide/nat.html" ?> <!-- Required to make image links work -->
<?description "" ?> <!-- Optional -->
<?draft true?> <!-- Optional -->
<?slug "" ?> <!-- Optional -->
<?layout "" ?> <!-- Optional -->
<?type "" ?> <!-- Optional -->
<?weight 40 ?> <!-- Optional -->

<!DOCTYPE article [
<!ENTITY % shared-content SYSTEM "../../../shared-content.ent">
%shared-content;
]>

<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.1" xml:id="nat">
    
    <info>
        <title xml:id="nat.title">Using &program_name; with NAT and Tor</title>
    </info>
    
    <para>Key information: the BindAddresses / Addresses functionality.</para>
    
    <para>&program_name; servers can be used from behind network address translation (NAT) devices.
        This applies to mix nodes, gateway nodes, service nodes, and directory authority nodes
        (dirauths). Port forwarding and other network configuration details depend on how you are
        hosting your servers and the type of router you use.</para>
    <para>Some hosting scenarios, such as the use of an AWS EC2 instance, require no manual port
        forwarding. A &program_name; node running on an EC2 instance with default network settings
        listens on its internal IP address yet can receive connections from publicly routed IP
        addresses. For home and small business routers, default policy is to block inbound
        connections from public addresses. In this scenario, you need to configure port forwarding
        to the appropriate internal IP address and port. <note>
            <para>Router and LAN host configuration in a NAT topology are beyond the scope of this
                topic.</para>
        </note></para>
    <section>
        <title><parameter>Addresses</parameter> and <parameter>BindAddresses</parameter></title>
        <para>Any &program_name; server node can be configured to support NAT and similar network
            topologies (such as Tor).  In a direct network connection, the address defined in the
            server <parameter>Addresses</parameter> parameter is both the address on with the node
            listens for incoming connections, and the address that is advertised to other mixnet
            components in the PKI document. By supplying the optional
                <parameter>BindAddresses</parameter> parameter, you can define two addresses:  a
            public address that is advertised in the PKI document, and an internal address that is
                <emphasis>not</emphasis> advertised.</para>
        <para>The following table shows the details for these two parameters. For more information
            about mixnet node configuration, see <link
                xlink:href="https://katzenpost.network/docs/admin_guide/components.html">Components
                and configuration of the &program_name; mixnet</link>.</para>
        <para>
            <table frame="all">
                <title><parameter>Addresses</parameter> and <parameter>BindAddresses</parameter>
                    parameters</title>
                <tgroup cols="3">
                    <colspec colnum="1" colname="c1" colwidth="1*"/>
                    <colspec colnum="2" colname="c2" colwidth="1*"/>
                    <colspec colnum="3" colname="c3" colwidth="1*"/>
                    <thead>
                        <row>
                            <entry><parameter>Parameter</parameter></entry>
                            <entry>Required</entry>
                            <entry/>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><parameter>Addresses</parameter></entry>
                            <entry>Yes</entry>
                            <entry>
                                <para>Specifies a list of one or more address URLs in a format that
                                    contains the transport protocol, IP address, and port number
                                    that the server will bind to for incoming connections.
                                    &program_name; supports URLs with that start with either
                                    "tcp://" or "quic://" such as: ["tcp://192.168.1.1:30001"] and
                                    ["quic://192.168.1.1:40001"].</para>
                                <para>Type: []string</para>
                            </entry>
                        </row>
                        <row>
                            <entry><parameter>BindAddresses</parameter></entry>
                            <entry>No</entry>
                            <entry>
                                <para><emphasis role="bold">BindAddresses</emphasis></para>
                                <para>If <emphasis role="bold">true</emphasis>, allows setting of
                                    listener addresses that the server will bind to and accept
                                    connections on. These addresses are not advertised in the
                                    PKI.</para>
                                <para>Type: bool</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        <para>To illustrate, a node configuration file with a direct Internet connection contains
            contains a <code>Server</code> section specifying only the
                <parameter>Addresses</parameter> parameter, as in the following
            lisiting:<programlisting>[Server]
  Identifier = "mix1"
  WireKEM = "xwing"
  PKISignatureScheme = "Ed448-Dilithium3"
  Addresses = ["<replaceable>tcp://127.0.0.1:30010</replaceable>",]
  MetricsAddress = "<replaceable>127.0.0.1:30012</replaceable>"
  DataDir = "/voting_mixnet/mix1"
  IsGatewayNode = false
  IsServiceNode = false</programlisting></para>
        <para>The configuration file for a similar node behind NAT contains <code>Server</code>
            section that specifies both the <parameter>Addresses</parameter> and
                <parameter>BindAddresses</parameter> parameters, as in the following
            lisiting:<programlisting>[Server]
  Identifier = "mix1"
  WireKEM = "xwing"
  PKISignatureScheme = "Ed448-Dilithium3"
  Addresses = ["<replaceable>tcp://100.100.100.x:30010</replaceable>"]
  BindAddresses = ["<replaceable>tcp://127.0.0.1:30010</replaceable>"]
  MetricsAddress = "127.0.0.1:30012"
  DataDir = "/voting_mixnet/mix1"
  IsGatewayNode = false
  IsServiceNode = false</programlisting></para>
        <para>Notice that the internal listening address remains unchanged, but it is now the value
            of the added <parameter>BindAddresses</parameter> parameter. The value of the
                <parameter>Addresses</parameter>parameter has changed to NAT router's WAN address.
            It is assumed that the router is configured to forward traffic to this address and port
            to the mixnet node over its LAN subnet, and that the host on which the mixnet server
            runs has been assigned a LAN address.</para>
    </section>
    <section>
        <title>Application scenarios</title>
        <para/>
        <section xml:id="node-to-node">
            <title xml:id="node-to-node.title">Node-to-node connections involving NAT</title>
            <para/>
            <figure>
                <info>
                    <title>Configuring a mix node behind NAT to be available to a dirauth</title>
                </info>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="pix/node-to-node-nat.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </section>
        <section xml:id="client-to-gateway-nat">
            <title xml:id="client-to-gateway-nat.title">Client-to-gateway connections involving
                NAT</title>
            <para/>
            <figure>
                <info>
                    <title>Configuring a gateway behind NAT to be available to a client</title>
                </info>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="pix/client-gateway-nat.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </section>
        <section xml:id="client-to-gateway-tor">
            <title xml:id="client-to-gateway-tor.title">Client-to-gateway connections over
                Tor</title>
            <para/>
            <figure>
                <info>
                    <title>Conguring a gateway to be availabe to a client over Tor</title>
                </info>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="pix/client-gateway-onion.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>Dirauth is a cooperative crash fault tolerant voting system composed of multiple
                dirauth nodes. However, each of these dirauth nodes must have knowledge of the other
                dirauth node's network connection information and public cryptographic key material.
                It's often convenient enough for dirauth operators to use a private git repo to
                coordinate changes to the dirauth configurations and public key materials.
                Therefore, dirauth operators wishing to operate a node behind a NAT device can
                configure their node to listen on a RFC1918 address such as 192.168.1.22 and yet
                tell the other dirauth node operators that their publicly routable address is some
                other IP address or perhaps a Tor Onion address. </para>
            <para><filename>/etc/tor/torrc</filename></para>
            <programlisting>...
HiddenServiceDir /var/lib/tor/my_website/
HiddenServicePort 1234 127.0.0.1:1234
...</programlisting>
            <para><filename>Katzenpost.toml</filename></para>
            <programlisting>[Server]
...
Addresses = [ "onion://onion-address.onion:1234"]
BindAddresses = [ "tcp://127.0.0.1:1234",]
...</programlisting>
            <para><filename>client.toml</filename></para>
            <programlisting>ListenNetwork = "tcp"
ListenAddress = "localhost:64331"
PKISignatureScheme = "Ed25519"
WireKEMScheme = "xwing"

[SphinxGeometry]
  PacketLength = 3082
  NrHops = 5
  HeaderLength = 476
  RoutingInfoLength = 410
  PerHopRoutingInfoLength = 82
  SURBLength = 572
  SphinxPlaintextHeaderLength = 2
  PayloadTagLength = 32
  ForwardPayloadLength = 2574
  UserForwardPayloadLength = 2000
  NextNodeHopLength = 65
  SPRPKeyMaterialLength = 64
  NIKEName = "x25519"
  KEMName = ""

[Logging]
  Disable = false
  File = ""
  Level = "DEBUG"

[UpstreamProxy]
  Type = "none"
  Network = ""
  Address = ""
  User = ""
  Password = ""

[Debug]
  DisableDecoyTraffic = true
  SessionDialTimeout = 0
  InitialMaxPKIRetrievalDelay = 0
  PollingInterval = 0
  EnableTimeSync = false

[PinnedGateways]

  [[PinnedGateways.Gateways]]
    WireKEMScheme = "xwing"
    Name = "gateway1"
    IdentityKey = "-----BEGIN ED25519 PUBLIC KEY-----\naJaBWi498i7smuA9JrZq0uHUZ4yrIv3OTAAnhWeoqOE=\n-----END ED25519 PUBLIC KEY-----\n"
    LinkKey = "-----BEGIN XWING PUBLIC KEY-----\nioBUTSlbNbR3raBKhHKfFzRlt9Vc1iKfzuh7b4HJiDcDqvw4VxtVpKoSE+WAYOlR\nLfaWp9Wd3qqeiyc8EQysWfeeBEtslsk/4aJWF+xQTYxjF/Sqb2ktJuuNkKRmDCVr\n20Voy+g/h+NnSXiB8PBjFIPJnZKi8JEynAfJ1iFLVwOggHfDtSehT5R2l2gjLgCZ\ncHBvm0W8rAM751N00IBXGGVPDWiNF/lNSyeQbnF2v3lKcEQ1xZIzp4MdtlWETEs/\nB6Fqi3Agk9hVUQOF+8VBbGZnJ/yP14hPFOK1C4OnzXJXTJJT3rWFRuwl/HMzlbil\nmIeYqRE2HHd2C9Gf8koLPalnYknDqHduAxWfcixPvbeVY0YFpjk48DoZZOlpCVuT\nLmkbkPPB0OolkpRQNHKpfpDKANh3BvA1Y8gywVdvKvpL6DSWZvgt2rlhdTUgL6rC\nhNEpR8TJTKqkTawiHaugAoFodxajm3I9ITEORxAm00Clu4GP8Juty9KyVdRKjxBf\nK5sSEEfKwmxTTakOrFN80wu2sHEIIFguqUzHuOS3UAejNgigIJIISdOOKZDH86Z6\nO3RdcPxc/TST85mRLhGxw+ekQigKd1SWmEKKmpccYqwL2redvmdXP4rPf6Auxviu\ne3WtgkpAN/lc87W0kDa0uCVsPZxm/TyDbnm2krLNUdRhT5lX0nsHMjlf4SE3I3E/\nh7cPckkjNCm994NcIus7eNAWUDK5ePSSOLyhXoE6uDsjWPM0piFHZxRLbIrBPGfK\ndsWTK3GPvSGK8KVcFFMaZBmy87u+vMhnXvCkNpxP9GEeucGTHKSqNxu97sG/PvoN\n95KX9qW+LPCOCTUXyAN4A1ovqCAjJcOuxAqfzvZq3Eo3T1arniyxI3Epz7RMLLqi\nbqt+S1F0C3RMFxk0EBd+6SENSgGuV7d+cPCrQKhK03NTGxxjYVihm4EPNVtk22jO\n91IGccIFbtJ2eTWnrclmRCeOFil+SHHIDrc981pCSSOWABxkT5exthc5mXy0IIHL\n4KzPydqUABVAfwR3euQSkllxjdG4ISt4CPixnWBO0npKquljJvh2g/gIpHMih/u5\nxklmUsCFWkh5eQWCcJKyOjJL6EK2ZGBu1UV8ebpcdtKx6/SO2/I7ivQe5fw6DaSo\nibdcn/S8uEHOMYgD21BDLKxJCiAQjHRzNCO9q/WaXhVNObCjTBaqAMxGWVN0Q7BW\n+IBrutzBeQfP7XgBgpRuMzm6i8tskJB59pQ/UwAHd6WfqHgD2jwJfbdcbPcUYSwA\njrNbcWVgIobHHAXBcwdHmSkVa2Gs9pA1PvjDFsQv9bdkjGZ1VJSx3hUmhKpoGoVl\nAKO/X6IjfRUXKst74hEgl7q6JpVjlJAjkGpR9cpJ17Q1cOdxFvOKxnBeSFasUQPF\nFQZEt3qmsDw/KQoxUNmBvJClWaogXElFu/K8HNR3FAaZEjSbLaiem8aXBJayTvKL\n3eaFgrwQqbctQBhMvRoJ2qRMbNIn8GJ5hKWQjLggtoPDdXSKjXM2OoAReSaeCKAf\n9uEgW8tVo7cejCOl9TiuuRj1kijUzO5pv5t1gEdakiHEMIQpIF6oaqcrDkiC48Ha\n7yIlFZf8uYpoDekvHz4NWQ==\n-----END XWING PUBLIC KEY-----\n"
    PKISignatureScheme = "Ed25519"
    Addresses = ["tcp://127.0.0.1:30004", "quic://[::1]:30005", "onion://thisisjustatestoniontoverifythatconfigandpkiworkproperly.onion:4242"]

[VotingAuthority]

  [[VotingAuthority.Peers]]
    Identifier = "auth1"
    IdentityPublicKey = "-----BEGIN ED25519 PUBLIC KEY-----\naXCOSAlAKN4jM54qnwwoH+bBvXSvj+enn4HKJu1Loak=\n-----END ED25519 PUBLIC KEY-----\n"
    PKISignatureScheme = "Ed25519"
    LinkPublicKey = "-----BEGIN XWING PUBLIC KEY-----\nCTwARqRQCTyQYpwQRpyyR0GPJqIqdbJrUspd2YETSUuaSxXOY4hh5MfNZNlhJ/Gt\nUsQ3/eTCU0QTDeqn+MAkidxWQkV972Yaz2xa3wST2oWe5QwmmGCLmosKvsAgTbvG\nCniRx/q7hUp7lnAadWp2zew5b2OiXSGuK5ypjpkB/+mp7vCqqbZGwvARclt4KTOt\npiaGZxtkb9zPJohOotPDLipHHiKvWucELZGz/xQXptsR3vUmLrh+axmi/EiRn7Q0\nBMmG3YpuN2eMtYOG8Vw3EJkLGwzGb7nPR7PAZwa6BgI3g/MBhKp6qeQD8Cl70Dt/\nnuRMWpV+J8qHWdXDGyt7jmtbFcjC7xyIpcMkfYRHGGZFBacA1Ka/uzcIj5oMBGh1\n9HA8O1lDpqsQpOkw7WRuJIal1NYxeSodSVWQ9AG7jOQbDUK+E5MTWvqpZwuaUCTC\nUKZIPJkb3nAddyi3BKcs47mQf5hTpQEF6sIS2rZ1UruVX0wAynBt9RtP2MB3wVtY\ng4q32Vh2Uls1BdJVcxyVTaelIwLJFQmuMzt1c9MPXpxwUJOQXNkCrEVLWKBJsysE\n0xlHoOQU51JseaFUEOY6dkIgXCHAGgwI8PTFEUKKGQg3RqvCNWt/j+FrMXRQMpvE\nS2eooYR4CqgR09KZD5l9hLbHeVUUfdoU27hckDEzaLQJMYhF50APyDSWa0C9oZaR\n3QE4meURIEo4pyW8YRVHAVwllvxyB+JTFmUnxREccvWJpWl2rxI4AtA2NVqECBw0\n9OECFlLGH9s+c9wC9ah50ZPOLRalVEdU6/FiS0pBGSB0HKsil0ipZ6qUIxgiJrYr\ndVV/b1uU0+qDQ5hJlbdUCtEUNHteXnIPjEa9lCg1KARFfGoIF5jM20FhOfFW/nVo\n1Jka5TtJOZDI1YoSQcUoDwCC6eW1ucFHPUOdviZ2fYEZzoAGx5A50GPG+7vHXeuh\nHQPArUC1TkafejW5bHmjqSo37fQO97SyrfKW0WNCARinHDJsM1NG4wmpZ+N8FihH\n5uYkTIIjDLRmoUhNaQG+jhzGhZSvf1CI9jI3BCiB9ShgwZR9RTlhCezC4Wy1Y3sU\nYmm6XbYYh7gCGGEs9npAxRmGroWwCVpMJeWzxdUR5KMJclNId1gBYhioCFSru4ZE\nbHBFiEoOxrubnkWxZGDLlkVDQmOyNISl+tIy0GI/ubtRLbgDMyyL71dWmLVZcpsh\nRBJJL+lrhSirFeyh9kZEotVdkOp5uPIViyqjIRukcCKzIwavM6YlptuyZitIBWsg\naqU+9ooqwZUPRLFRdJE/J5umbdQTBtOMhdrOIRdKeJoEDAFIqYwQcrJjLDJj8lhA\nJ2FwGnFjJJYFVWIte2qg+7UqKxqf1+QlL+uJ4uaE6KQJcRlzKGYLE1h3jToWL8wO\nDaUPdACQGexHj7wVomPJa9ecSKGUKFWb1LZLryYh+AM8D3COLKN3CXU1WAG/Bth3\nF2QC4FewIuVMhVWk9XoXY+By5cKHpriPbwtqRgY9c6TKNnk7dVKL3rWg0mG0qoSz\n4MIJxfGsWJb0rK7KUEBu5BTati4iHqy6NOr+FtGYcyYfH2UB+Q2LWit9FB6Bgeg6\n7wbN0RSiyrNIM4ZJ9eqvKg==\n-----END XWING PUBLIC KEY-----\n"
    WireKEMScheme = "xwing"
    Addresses = ["tcp://127.0.0.1:30001"]

  [[VotingAuthority.Peers]]
    Identifier = "auth2"
    IdentityPublicKey = "-----BEGIN ED25519 PUBLIC KEY-----\nnYK+ND7+nTgbh+9uEcAZeDp0Ohkq3jzJro2BrMCkZFA=\n-----END ED25519 PUBLIC KEY-----\n"
    PKISignatureScheme = "Ed25519"
    LinkPublicKey = "-----BEGIN XWING PUBLIC KEY-----\njDJpv2C8DKNWq1OK5TNEPNmuQUihpdC5w8i87aci7UAZ0/LOfOGFbeIo6MKNnUyL\nskYa3pASRbAxMTNRDNhMsAq9JQy2o/CjXrDHZoe0AEZp9nwDozOqUtqSiCxnV+Bw\ng4tN6aRTl3FplLuOAzY2imV0kFXIITWfqSlIP1eWTMh4YvVfOrwzV0yjfqRthpa7\nr6tjBRlYc3QE1Jlz3fOOFzsLtlaUYHxJtjxdfTtpW7yr6WMJyyu+HJcge3Zoq/gG\nNytDYIAYEWgWiRZpcAm6V2m6utB3r/O7OdS3hMcv7YDAeFG7E0jExthP0pHEqkaZ\npGipM2JSvzk5Shp2UNhoSxMej6U4egoAaxZ3JZIs+ZQRZwyoPqBp4Gca9OlEO3QR\nR0Ami9deA2Ifiegu1sSxlGt6B1YDgdhGfLQow+JV0wy0MzMAYrasVCIaNeghkvRa\n3pkVyWZc12RR4St0oAxU03QrRPSoGXonYfQbdrUZfjlywrgcNTu+v4VRDjst4yUd\nqzZPw9iABHJgw+SwQgAyzTZj3ntrs7W7ECepaVbDt0c9yKy3E0Qy5Je/rkQgnjsC\ndDU+OsnD8rVnjXgyj3Cp7+dmh1IeC1ybTomwyDCKr+WwEeh2beo8MaG05wRYRCS6\n8kV5kocNB1w5SUZ+R6fC0BwU+FFho9mK4LFnoHenHSXE8PludpmOW0OTf0IVZeGd\npcHK7DkELUtQOQCDBVXBoJAD80ewoNfN8hIzbECOCsdsMOEl2VuA/wB8WkS9JNx8\nCCM4nMZbnyeaeaojvJMDgwW8U3kuBwhR0AeZO/dQPVpWdbxV61NIHeRi21cniVrG\naMJaXtaEp0MxHmRl2Ue0HcOVd7S8dNPJmwUBNOYYpIQ9H4KVWXwP+DvC3fkOXESp\nmLJZySbNmfCtLzDHzMWKXaW3k8lRZ3CUrFtAFsfIxAhlL0RBfbe2gGxhL2tKONsN\nKAIXt+YnNTOpVnsPhFRUCWGyrkO9c1yMAiclVWliaaVlBbYHhmKEPUSZTAI5meuN\nCkstBADBEKyc1fArgmIRbxYWXNKWrien5CBXlNM/g9K3MlIFjqs6FqAQDad0eVs+\naeLNPHhAFdZ3ZMNU8zgpAQs2uMqms1a4/8E6PlWH2upOWysO5vzDm1bFR3dVw3eO\nOlsbAN1xC/ChbhSk6gy7RtCHGfllmMNlRMAc59w0tJuxUpQasFYkxMWgFwO7BdFe\ni2TE39k33ubDhyQLwOkuWaTLlVWfLyIkZRFOdOhBP8o4i3R/ujVZ5bVDn5qKoKWC\nlboy71abYZRR5HiMhtFmaXSZuPey7WFh0SF2/UciTKc77pBihFte5Up+NSsJjQZk\n29U4EFtDHgK6GwUan6aI4KUOYrWjemAKSePO7qoZPHQ0wXtoxgGbshipPYQPohfB\nGQPI31gxlHtTf2YUdqoKasmRvyIXqrV2ImQ1SBJ5SCcGUtUzvkekZfZUEGaD+cKz\nr5wyHeS4iEuyzoVD8avH90q3J2mt2dTDfSNaKWKkzHUh+jZ9nIYpGbpfNrWUkkYr\nhLh+TJFFmpTZWIIw3K+XNdb0iLw6ZC6TB7uGkjhkQW+mtGKzZr6bwywCatrAOrdq\nfK02ZSDz8Ckfkrfn1BQLOA==\n-----END XWING PUBLIC KEY-----\n"
    WireKEMScheme = "xwing"
    Addresses = ["tcp://127.0.0.1:30002"]

  [[VotingAuthority.Peers]]
    Identifier = "auth3"
    IdentityPublicKey = "-----BEGIN ED25519 PUBLIC KEY-----\ngnn4qJensuWMONasmiau/4HQnPFJifj2OER7tqD2t/s=\n-----END ED25519 PUBLIC KEY-----\n"
    PKISignatureScheme = "Ed25519"
    LinkPublicKey = "-----BEGIN XWING PUBLIC KEY-----\nbnkD32kD1Spj8uoyriwobTYrWNFybCIjEllrP4QUhFV0Iwm7F7CF3bQ4xgsB3BvD\n8up3cIsTJ3XB/9spnVG+ynGlUiJyoPkoORqGImt9KcWqS3yNZXB+e+OYH2yy2cwL\npplQ/foJRhKd6tvFq7EPjqfGfrLL+Lw9PkamaOSqgYCtjxep6aclE+SWP+sEv8da\naaXP0qLNl7dsP9Ene+oIiPUD8QmWOAYRfKh5BZqFLYN1UuqLroIq3FiRe7dIAHOp\nAga8pBKpXfKVJXONoytOhOmQdhRiFQKJavFpj6hSXHeQ+NxQz4q5NOyvrhx/gvaG\n6vqX6vdT53ySaVoXJyASbqOT88EqtecF1QeWNIOeL6xu3cFNoIaegmDL+BYoNBkH\nqAG5LKAAJ2m8VVqYRgRLvXCDA2grFDcembdSijct+ZmeFSBFN2daxAcjxqyU8mYK\nmBAlY8ZC6vUY78m5cXdSnqFD7LkQe1sb3yVc3PVfIJF3qdSClzRj2MZbSGWmx9pq\ntKVQODonlEOUu9YcfYcmvgSClJNACDbPHDRgmRuh1qNurTRj83E+B1etm6U7sATK\nLwWsKepcqoV8E6BlKklcsiVN+euQPdqNnwCXGYNwuEox6aa9aFO4iDgrCOCgkcLE\nVXmFsJovfVBAJEpo2FIBm/Y2oCpBHGaQaQI0KdSebrFKhuwtHIs/slY0OGaBG4qP\njNCqn4plCPJ5CWSvIUC/J0KO1pYJV4wmzSgwNDQzjwQEfycbqoWIZvs0OHQWowW6\nvtdB+WtxuHUz4oZFLnG9UgAJzLGohwcmi6wP4YmtBnUI9WNylppnp9RxI3gSrLeS\nNNGn26I1uMEfPgPGwWUMkcCNgGAPlnpxYgFxycoycvrFxwuGrZoI4RcdRIOlmwJT\nyKiqn+QSR/CJgNkSnCGB1woR4PA1m6lKERoiTMg2/1F7ADW8YINTgYRo4xUjBOCn\nvLc/Eiw4FbdFNgRzZiN87zuCV2gANTpjFalOiUl53bsoWOKgheF/izJdjkhx5kB7\nrZctURQFVWezlmeOWIg1e8ituStsC7Q9INIX2FXJ+xolhgCiOlSmWXUHq2ePm3Wq\noVqsEqHFgeujaPV5/yOmiqAYERMkcFvITzeTMhS+tUREV9kpgSauZgqAUEaONbtp\nHDs9fKzLm4J1xOiXMIazDTFi/CEaNlSnDaw/xQRVjAkqb4Qi0vCJ9HJmb6Q7yBVp\n33lITjl0FUc5TmJX5OeLToJ71EE6RoETjYEiZUk3RJs//RVvbkkryKyE+NRoACSM\nVgQTp3tv4VSHVwVSULqs1TZGi7CcVStuGeNaUNU548y2yUFdmdqJnlCfDlV2aRY2\nGvEquInLAjaSS5lfPFEMgNts1kWggkihGJiXpiZx33EPbBdFHUgvOkc+M9SldGtM\n+CXOPdI9wgNvBnIw2Di69fHIvgdl9xxoceZ+UWEjl+IOCpKQoAtW7NVSpsK9hPcB\nk0mYdPh3X6y4KWVlglycjGQOrdK+njiUqxEvZNolmaYZWVQNpkV4ylGgoidE8xgz\n0IqiDk+K0CJrhVKI/CxgeNwpMOBVZJOfnhpegJyXTIJkauu5yMLfBhbG0TKNpSE/\n6qdySmRRPC5qMDEeBfwLHA==\n-----END XWING PUBLIC KEY-----\n"
    WireKEMScheme = "xwing"
    Addresses = ["tcp://127.0.0.1:30003"]</programlisting>
            <para>Dirauths and gateways can be hosted as Tor onion services. (Mix and service nodes
                cannot be hosted in this manner because they communicate only inside the mix
                network.) </para>
            <para/>
            <para>Any mix node type can operate behind a NAT device by using the
                    <parameter>BindAddresses</parameter> parameter. When
                    <parameter>BindAddresses</parameter> is set, a node listens at one address while
                advertising a different address as configured by the
                    <parameter>Addresses</parameter> parameter, which specifies the address that the
                node shares with other nodes through the PKI document.</para>
            <para>If you are configuring a Gateway node to listen on a Tor onion service, then you
                must make sure that the BindAddresses match the listening address and port in your
                "torrc" file:</para>
            <programlisting>
HiddenServiceDir /var/lib/tor/my_website/
HiddenServicePort 1234 127.0.0.1:1234
</programlisting>
            <para>We refer you to the Tor onion setup docs for more information:
                https://community.torproject.org/onion-services/setup/</para>
            <para>The corresponding Gateway config Server section might look like this:</para>
            <programlisting>[Server]
Identifier = "gnunet"
PKISignatureScheme = "Ed25519 Sphincs+"
WireKEM = "KYBER768-X25519"
Addresses = [ "onion://your-onion-address.onion:1234"]
BindAddresses = [ "tcp://127.0.0.1:1234",]
DataDir = "/var/lib/pq-katzenpost-mixserver"
IsGatewayNode = true
IsServiceNode = false
...</programlisting>
            <note>
                <para>NAT penetration protocols such as <link
                        xlink:href="https://www.rfc-editor.org/rfc/rfc6886">NATPMP</link>, <link
                        xlink:href="https://www.rfc-editor.org/rfc/rfc5389">STUN</link>, and <link
                        xlink:href="https://www.rfc-editor.org/rfc/rfc5766">TURN</link> are not
                    supported.</para>
            </note>
        </section>
    </section>
    
    
    
    
</article>
