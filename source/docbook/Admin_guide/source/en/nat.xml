<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<!-- The XSL transform inserts these values as Hugo frontmatter. -->
<!-- Additionally, a "date" timestamp is inserted by the stylesheet. -->
<?title ?> 
<?linkTitle "NAT considerations" ?>  <!-- Section menu link text -->
<?url "docs/admin_guide/nat.html" ?> <!-- Required to make image links work -->
<?description "" ?> <!-- Optional -->
<?draft "false" ?> <!-- Optional -->
<?slug "" ?> <!-- Optional -->
<?layout "" ?> <!-- Optional -->
<?type "" ?> <!-- Optional -->
<?weight 20 ?> <!-- Optional -->

<!DOCTYPE article [
<!ENTITY % shared-content SYSTEM "../../../shared-content.ent">
%shared-content;
]>

<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.1" xml:id="nat">
    
    <info>
        <title xml:id="nat.title">NAT considerations for &program_name; servers</title>
    </info>

    <para>Any &program_name; server node can be configured to run behind a properly configured
        router that supports <link xlink:href="https://www.rfc-editor.org/rfc/rfc1918">network
            address translation</link> (NAT) and similar network topologies that traverse public and
        private network boundaries. This applies to directory authorities, gateways that allow
        clients to connect to the network, mix nodes, and service nodes that provide protocols over
        the mix network such as ping and spool services for storing messages or rendezvous
        information.</para>
    <para>Typically, the router connecting a LAN with the Internet blocks incoming connections by
        default, and must be configured to forward traffic from the Internet to a destination host
        based on port number. These target addresses are most often drawn from <link
            xlink:href="https://www.rfc-editor.org/rfc/rfc6598">RFC 6598</link> private address
        space, although more exotic topologies involving public IP address may also be targeted.
        (Router configuration for NAT topologies in general is beyond the scope of this topic.) For
        such cases, where the host listens on a LAN-side <emphasis>address:port</emphasis> but is
        accessed publicly using a different <emphasis>address:port</emphasis>, &program_name;
        provides mechanisms to specify both addresses.</para>

    <para>
        <note>
            <para>&program_name; does not support NAT penetration protocols such as <link
                    xlink:href="https://www.rfc-editor.org/rfc/rfc6886">NATPMP</link>, <link
                    xlink:href="https://www.rfc-editor.org/rfc/rfc5389">STUN</link>, <link
                    xlink:href="https://www.rfc-editor.org/rfc/rfc5766">TURN</link>, and <link
                    xlink:href="https://en.wikipedia.org/wiki/Universal_Plug_and_Play"
                >UPnP</link>.</para>
        </note>
    </para>
    <section>
        <title><parameter>Addresses</parameter> and <parameter>BindAddresses</parameter></title>
        <para>In a direct network connection, the values defined in the server
                <parameter>Addresses</parameter> parameter define the addresses on which the node
            listens for incoming connections, and which are advertised to other mixnet components in
            the PKI document. By supplying the optional <parameter>BindAddresses</parameter>
            parameter, you can define a second address group: LAN-side addresses that are
                <emphasis>not</emphasis> advertised in the PKI document. This is useful for NAT
            scenarios, which involve both public and private address spaces.<note>
                <para>The <parameter>Addresses</parameter> and <parameter>BindAddresses</parameter>
                    parameters are closely analogous to Tor's <parameter>Address</parameter> and
                        <parameter>ORPort</parameter> parameters. For more information, see the
                        <link xlink:href="https://manpages.debian.org/testing/tor/torrc.5.en.html"
                        >torrc man page</link>.</para>
            </note></para>
        <para>The following table shows the details for these two parameters. For more information
            about node configuration, see <link
                xlink:href="https://katzenpost.network/docs/admin_guide/components.html">Components
                and configuration of the &program_name; mixnet</link>.</para>
        <para>
            <table frame="all">
                <title><parameter>Addresses</parameter> and <parameter>BindAddresses</parameter>
                    parameters</title>
                <tgroup cols="3">
                    <colspec colnum="1" colname="c1" colwidth="1*"/>
                    <colspec colnum="2" colname="c2" colwidth="1.39*"/>
                    <colspec colnum="3" colname="c3" colwidth="3.17*"/>
                    <thead>
                        <row>
                            <entry><parameter>Parameter</parameter></entry>
                            <entry>Required</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><parameter>Addresses</parameter></entry>
                            <entry>Yes</entry>
                            <entry>
                                <para>Specifies a list of one or more address URIs in a format that
                                    contains the transport protocol (typically TCP), an IP address,
                                    and a port number that the node will bind to for incoming
                                    connections. This value is advertised in the PKI document. </para>
                            </entry>
                        </row>
                        <row>
                            <entry><parameter>BindAddresses</parameter></entry>
                            <entry>No</entry>
                            <entry>
                                <para>If <emphasis role="bold">true</emphasis> (that is, if this
                                    parameter is present), this parameter sets listener
                                        <emphasis>address:port</emphasis> values that the server
                                    will bind to and accept connections on, but that are not
                                    advertised in the PKI document. In this case,
                                        <parameter>Addresses</parameter> defines public addresses on
                                    the Internet side of a NAT router, while
                                        <parameter>BindAddresses</parameter> defines a different set
                                    of addresses behind the NAT router. </para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        
        <para>
            <note>
                <para>Directory authorities do not support the <code>BindAddresses</code> parameter,
                    but can still be used behind NAT. For more information, see <xref
                        endterm="dirauth-nat.title" linkend="dirauth-nat"/></para>
            </note>
        </para>
    </section>
    <section>
        <title>Hosting mix, gateway, and service nodes behind NAT</title>
        <para>This section provides an example of  a &program_name; topology that make use of the
                <parameter>BindAddresses</parameter> parameter. In this scenario, a mix node behind
            NAT listens on local addresses for connections, while advertising a public address and
            port to its peer, a directory authority, that is assumed to have a publicly routable
            address.</para>
        <para/>
        <figure>
            <info>
                <title>Accessing a mix node behind NAT </title>
            </info>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="pix/mix-behind-nat.png" scale="65"/>
                </imageobject>
            </mediaobject>
        </figure>
        <!-- Uses RFC 5737: IPv4 Address Blocks Reserved for Documentation -->
        <para><link xlink:href="&baseURL;docs/admin_guide/pix/mix-behind-nat.png" xlink:show="new"
                >Enlarge diagram</link></para>
        <para><emphasis role="bold">Key observations</emphasis></para>
        <itemizedlist>
            <listitem>
                <para>The configuration file on the NATed mix node is <code>katzenpost.toml</code>.
                </para>
            </listitem>
            <listitem>
                <para>The relevant section of the configuration file is
                    <code>[Server]</code>.</para>
            </listitem>
            <listitem>
                <para>The <parameter>Addresses</parameter> parameter specifies the publicly routable
                        <emphasis>address:port</emphasis>, 203.0.113.10:1234, over which the mix
                    node can be reached from the Internet. This value is periodically advertised in
                    the PKI document to other components of the mix network.</para>
            </listitem>
            <listitem>
                <para>The <parameter>BindAddresses</parameter> parameter specifies the LAN
                        <emphasis>address:port</emphasis>, 192.168.0.2:1234, on which the node
                    listens for incoming Sphinx packets from peers.</para>
            </listitem>
            <listitem>
                <para>The NAT router has two configured addresses, public address 203.0.113.10 and
                    private LAN address 192.168.0.1.</para>
            </listitem>
            <listitem>
                <para>The NAT router forwards traffic for 203.0.113.10:1234 to the mix node's LAN
                        <emphasis>address:port</emphasis>, 192.168.0.2:1234, where the configured
                    listener is bound.</para>
            </listitem>
        </itemizedlist>
        <para>The configuration in this example applies equally well to a NATed gateway node or
            service provider. A NATed gateway node would also be reachable by a client with
            knowledge of the gateway's public address. </para>
    </section>
    <section xml:id="dirauth-nat">
        <title xml:id="dirauth-nat.title">Hosting a directory authority behind NAT</title>
        <para>Directory authorities have no support for the <parameter>BindAddresses</parameter>
            parameter. They also do not adverstise an address in the PKI document, because peers
            must already know the address in order to fetch the document, which means that addresses
            for dirauths must be provided out-of-band.</para>
        <para> Consequently, the <code>Addresses</code> parameter for dirauths performs the same
            function as <code>BindAddresses</code> on the other node types, that is, to define the
            node's listening <emphasis>address:port</emphasis> values, but not an advertised
            address. In a NAT scenario, these addresses can refer to any target that is situated on
            the LAN side of the NAT router.</para>
        <figure>
            <info>
                <title>Accessing a directory authority behind NAT</title>
            </info>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="pix/dirauth-behind-nat.png" scale="65"/>
                </imageobject>
            </mediaobject>
        </figure>
        <!-- Uses RFC 5737: IPv4 Address Blocks Reserved for Documentation -->
        <para><link xlink:href="&baseURL;docs/admin_guide/pix/dirauth-behind-nat.png" xlink:show="new"
                >Enlarge diagram</link></para>
        <para><emphasis role="bold">Key observations</emphasis></para>
        <itemizedlist>
            <listitem>
                <para>The configuration file on the NATed dirauth is <code>authority.toml</code>.
                </para>
            </listitem>
            <listitem>
                <para>The relevant section of the configuration file is
                    <code>[Server]</code>.</para>
            </listitem>
            <listitem>
                <para>The <parameter>Addresses</parameter> parameter specifies a private <link
                        xlink:href="https://www.rfc-editor.org/rfc/rfc6598">RFC 6598</link>
                    <emphasis>address:port</emphasis>, 192.168.0.2:1234. By definition, this address
                    cannot be reached directly from the Internet.</para>
            </listitem>
            <listitem>
                <para>There is no <parameter>BindAddresses</parameter> parameter.</para>
            </listitem>
            <listitem>
                <para>The NAT device has two configured addresses, public address 198.51.100.50, and
                    LAN address 192.168.0.1.</para>
            </listitem>
            <listitem>
                <para>The NAT device routes traffic targeting 198.51.100.50:1234 to the
                        <emphasis>address:port</emphasis> specified in <code>Addresses</code>,
                    192.168.0.2:1234.</para>
            </listitem>
            <listitem>
                <para>The dirauth does not advertise its address on the mix network. The address
                    must provided to peers out-of-band.</para>
            </listitem>
        </itemizedlist>
    </section>
  
</article>
