<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<!-- The XSL transform inserts these values as Hugo frontmatter. -->
<!-- Additionally, a "date" timestamp is inserted by the stylesheet. -->
<?title ?> 
<?linkTitle "Using with NAT" ?>  <!-- Section menu link text -->
<?url "docs/admin_guide/nat.html" ?> <!-- Required to make image links work -->
<?description "" ?> <!-- Optional -->
<?draft "false" ?> <!-- Optional -->
<?slug "" ?> <!-- Optional -->
<?layout "" ?> <!-- Optional -->
<?type "" ?> <!-- Optional -->
<?weight 40 ?> <!-- Optional -->

<!DOCTYPE article [
<!ENTITY % shared-content SYSTEM "../../../shared-content.ent">
%shared-content;
]>

<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.1" xml:id="nat">
    
    <info>
        <title xml:id="nat.title">Using &program_name; with NAT and Tor</title>
    </info>
    
    <para>&program_name; servers can be used from behind network address translation (NAT) devices.
        This applies to mix nodes, gateway nodes, service nodes, and directory authority nodes
        (dirauths). Port forwarding and other network configuration details depend on how you are
        hosting your servers and the type of router you use.</para>
    <para>Some hosting scenarios, such as the use of an Amazon Elastic Compute Cloud (Amazon EC2)
        instance, require no manual port forwarding. A &program_name; node running on an EC2
        instance with default network settings listens on its internal IP address yet can receive
        connections from publicly routed IP addresses. For home and small business routers, typical
        default policy is to block inbound connections from public addresses. In this scenario, you
        need to configure port-forwarding to the appropriate internal IP address and port of the
        destination node. </para>
    <para>Router and LAN host configuration in a NAT topology are beyond the scope of this topic.
        NAT was defined in 1994 in <link xlink:href="https://www.rfc-editor.org/rfc/rfc1631">RFC
            1631</link> and tutorials are widely available.</para>
    <para>
        <note>
            <para>&program_name; does not support NAT penetration protocols such as <link
                    xlink:href="https://www.rfc-editor.org/rfc/rfc6886">NATPMP</link>, <link
                    xlink:href="https://www.rfc-editor.org/rfc/rfc5389">STUN</link>, and <link
                    xlink:href="https://www.rfc-editor.org/rfc/rfc5766">TURN</link>.</para>
        </note>
    </para>
    <section>
        <title><parameter>Addresses</parameter> and <parameter>BindAddresses</parameter></title>
        <para>Any &program_name; server node can be configured to support NAT and similar network
            topologies (such as Tor) that traverse public and private network boundaries. In a
            direct network connection, the address defined in the server
                <parameter>Addresses</parameter> parameter defines the addresses on with the node
            listens for incoming connections, and which are advertised to other mixnet components in
            the PKI document. By supplying the optional <parameter>BindAddresses</parameter>
            parameter, you can define a second address group: internal addresses that are
                <emphasis>not</emphasis> advertised in the PKI document. This is useful for NAT and
            Tor scenarios.</para>
        <para>The following table shows the details for these two parameters. For more information
            about mixnet node configuration, see <link
                xlink:href="https://katzenpost.network/docs/admin_guide/components.html">Components
                and configuration of the &program_name; mixnet</link>.</para>
        <para>
            <table frame="all">
                <title><parameter>Addresses</parameter> and <parameter>BindAddresses</parameter>
                    parameters</title>
                <tgroup cols="3">
                    <colspec colnum="1" colname="c1" colwidth="1*"/>
                    <colspec colnum="2" colname="c2" colwidth="1.39*"/>
                    <colspec colnum="3" colname="c3" colwidth="3.17*"/>
                    <thead>
                        <row>
                            <entry><parameter>Parameter</parameter></entry>
                            <entry>Required</entry>
                            <entry>Description</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><parameter>Addresses</parameter></entry>
                            <entry>Yes</entry>
                            <entry>
                                <para>Specifies a list of one or more address URLs in a format that
                                    contains the transport protocol, IP address, and port number
                                    that the server will bind to for incoming connections. This
                                    value is advertised in the PKI document. &program_name; supports
                                    URLs with that start with either <code>tcp://</code> or
                                        <code>quic://</code> such as:
                                        <code>["tcp://192.168.1.1:30001"]</code> and
                                        <code>["quic://192.168.1.1:40001"]</code>. Onion addresses
                                    (transport protocol <code>onion://</code>) are also supported on
                                    some node types if <parameter>BindAddresses</parameter> is also
                                    present.</para>
                                <para>Overridden by <parameter>BindAddresses</parameter>; see
                                    below.</para>
                            </entry>
                        </row>
                        <row>
                            <entry><parameter>BindAddresses</parameter></entry>
                            <entry>No</entry>
                            <entry>
                                <para>If <emphasis role="bold">true</emphasis> (that is, if the
                                    parameter is present), this parameter allows you to set internal
                                    listener addresses that the server will bind to and accept
                                    connections on, but that are not advertised in the PKI document.
                                    This parameter is used to configure NAT and Tor support.</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </para>
        <para>For example, a mix node configuration file with a direct Internet connection, or with
            transparent NAT hosting such as that provided by Amazon EC2, contains a
                <code>Server</code> section specifying only the <parameter>Addresses</parameter>
            parameter, as in the following listing:<programlisting>[Server]
  Identifier = "mix1"
  WireKEM = "xwing"
  PKISignatureScheme = "Ed448-Dilithium3"
  Addresses = ["<replaceable>tcp://127.0.0.1:30010</replaceable>",]
  MetricsAddress = "<replaceable>127.0.0.1:30012</replaceable>"
  DataDir = "/voting_mixnet/mix1"
  IsGatewayNode = false
  IsServiceNode = false</programlisting></para>
        <para>Importantly, the value of <parameter>Addresses</parameter>, which the node advertises to other
            peers, is its loopback address, 127.0.0.1, and a specified port. This means that there
            is no publicly routable address for this node, and that traffic arriving at the node is
            delivered there by external infrastructure, presumably a configured LAN. In all of these
            examples, nodes have necessarily been assigned a LAN addresses, but these addresses play
            no role in &program_name; server configurations. Rather, for portability, the
            configurations use the logically equivalent loopback address.</para>
        <para>In contrast to the direct connection, the next example shows the configuration file
            for a similar node behind NAT, containing a <code>Server</code> section that specifies
            both the <parameter>Addresses</parameter> and
            <parameter>BindAddresses</parameter>parameters:<programlisting>[Server]
  Identifier = "mix1"
  WireKEM = "xwing"
  PKISignatureScheme = "Ed448-Dilithium3"
  Addresses = ["<replaceable>tcp://203.0.113.10:30010</replaceable>"]
  BindAddresses = ["<replaceable>tcp://127.0.0.1:30010</replaceable>"]
  MetricsAddress = "127.0.0.1:30012"
  DataDir = "/voting_mixnet/mix1"
  IsGatewayNode = false
  IsServiceNode = false</programlisting></para>
        <para>Notice that the internal listening address remains unchanged, but it's has been
            shifted to the new <parameter>BindAddresses</parameter> parameter. In addition, the
            value of the <parameter>Addresses</parameter> parameter has been changed to a public
            address (the NAT router's WAN address), including a port. It is assumed that the router
            is configured to forward traffic routed to this address:port to the mixnet node over its
            LAN. </para>
    </section>
    <section>
        <title>Application scenarios</title>
        <para>The following sections  illustrate supported &program_name; topologies that make use
            of the <parameter>BindAddresses</parameter> parameter.</para>
        <section xml:id="peer-to-peer">
            <title xml:id="peer-to-peer.title">Peer-to-peer connections involving NAT</title>
            <para>In this scenario, a mix node behind NAT listens on local addresses for
                connections, while advertising a public address and port to its peer, a directory
                authority, that is assumed to have a publicly routable address.</para>
            <figure>
                <info>
                    <title>Configuring a mix node behind NAT to be available to a dirauth</title>
                </info>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="pix/peer-to-peer-nat.png" scale="65"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para><link xlink:href="&baseURL;docs/admin_guide/pix/peer-to-peer-nat.png" xlink:show="new">Enlarge diagram</link></para>
            <para><emphasis role="bold">Key observations</emphasis></para>
            <itemizedlist>
                <listitem>
                    <para>The configuration file on the NATed mix node is
                            <code>katzenpost.toml</code>. </para>
                </listitem>
                <listitem>
                    <para>The relevant section of the configuration file is
                        <code>[Server]</code>.</para>
                </listitem>
                <listitem>
                    <para>The <parameter>Addresses</parameter> parameter specifices the publicly routable
                        address (203.0.113.10) and a port (1234) over which the mix node can be
                        reached from the Internet. This value is periodically advertised in the PKI
                        document to other components of the mix network.</para>
                </listitem>
                <listitem>
                    <para>The <parameter>BindAddresses</parameter> parameter specifies the loopback
                        address (127.0.0.1) and a port (1234) on which the node listens for incoming
                        Sphinx packets from peers.</para>
                </listitem>
                <listitem>
                    <para>The mix node also has a LAN address, 192.168.0.2, which does not appear in
                        the &program_name; configuration, but is
                        <?oxy_comment_start author="dwrob" timestamp="20250123T124901-0800" comment="Is this an acceptable thing to say?"?>logically
                        equivalent<?oxy_comment_end?> to the node's loopback address,
                        127.0.0.1.</para>
                </listitem>
                <listitem>
                    <para>The NAT router has two configured addresses, public address 203.0.113.10,
                        and LAN address 192.168.0.1.</para>
                </listitem>
                <listitem>
                    <para>The NAT device routes traffic for 203.0.113.10:1234 to the LAN address and
                        port of the mix node, 192.168.0.2:1234, and therefore to the configured
                        listener bound to 127.0.0.1:1234.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="client-to-gateway-nat">
            <title xml:id="client-to-gateway-nat.title">Client-to-gateway connections involving
                NAT</title>
            <para>In this scenario, a gateway node behind NAT listens on local addresses for
                connections from the Internet, while advertising a public address and port to a
                <?oxy_comment_start author="dwrob" timestamp="20250123T132718-0800" comment="Link needed to client documentattion when it exists."?>client
                application<?oxy_comment_end?> that is assumed to have a publicly routable
                address.</para>
            <figure>
                <info>
                    <title>Configuring a gateway behind NAT to be available to a client</title>
                </info>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="pix/client-gateway-nat.png" scale="65"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para><link xlink:href="&baseURL;docs/admin_guide/pix/client-gateway-nat.png" xlink:show="new">Enlarge diagram</link></para>
            <para><emphasis role="bold">Key observations</emphasis></para>
            <itemizedlist>
                <listitem>
                    <para>The configuration file on the NATed gateway node is
                            <code>katzenpost.toml</code>. </para>
                </listitem>
                <listitem>
                    <para>The relevant section of the configuration file is
                        <code>[Server]</code>.</para>
                </listitem>
                <listitem>
                    <para>The <parameter>Addresses</parameter> parameter specifices the publicly routable
                        address (203.0.113.10) and a port (1234) over which the gateway node can be
                        reached from the Internet. This value is periodically advertised in the PKI
                        document to other components of the mix network.</para>
                </listitem>
                <listitem>
                    <para>The <parameter>BindAddresses</parameter> parameter specifies the loopback
                        address (127.0.0.1) and a port (1234) on which the node listens for incoming
                        Sphinx packets from clients.</para>
                </listitem>
                <listitem>
                    <para>The gateway node also has a LAN address, 192.168.0.2, which does not
                        appear in the &program_name; configuration, but is
                        <?oxy_comment_start author="dwrob" timestamp="20250123T124901-0800" comment="Is this an acceptable thing to say?"?>logically
                        equivalent<?oxy_comment_end?> to the node's loopback address,
                        127.0.0.1.</para>
                </listitem>
                <listitem>
                    <para>The NAT router has two configured addresses, public address 203.0.113.10,
                        and LAN address 192.168.0.1.</para>
                </listitem>
                <listitem>
                    <para>The NAT device routes traffic for 203.0.113.10:1234 to the LAN address and
                        port of the gateway node, 192.168.0.2:1234, and therefore to the configured
                        listener bound to 127.0.0.1:1234.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="client-to-gateway-tor">
            <title xml:id="client-to-gateway-tor.title">Client-to-gateway connections over
                Tor</title>
            <para>In this scenario, a gateway node behind NAT listens on local addresses for
                connections from the Internet, while advertising an onion address and port to a
                <?oxy_comment_start author="dwrob" timestamp="20250123T132718-0800" comment="Link needed to client documentattion when it exists."?>client
                application<?oxy_comment_end?> that is assumed to have a publicly routable address.
                Apart from the use of an onion address, this scenario is identical to the previous
                one.</para>
            <figure>
                <info>
                    <title>Conguring a gateway to be availabe to a client over Tor</title>
                </info>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="pix/client-gateway-onion.png" scale="65"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para><link xlink:href="&baseURL;docs/admin_guide/pix/client-gateway-onion.png" xlink:show="new">Enlarge diagram</link></para>
            <para><emphasis role="bold">Key observations</emphasis></para>
            <itemizedlist>
                <listitem>
                    <para>The configuration file on the NATed gateway node is
                            <code>katzenpost.toml</code>. </para>
                </listitem>
                <listitem>
                    <para>The relevant section of the configuration file is
                        <code>[Server]</code>.</para>
                </listitem>
                <listitem>
                    <para>The gateway node exposes itself to the network as an onion (hidden)service
                        bound to the loopback address (127.0.0.1) and a port (1234). This requires a
                        Tor daemon to be running on the node and for the code snippet from the Tor
                        configuration file <code>/etc/tor/torrc</code> to contain the lines
                        shown.</para>
                </listitem>
                <listitem>
                    <para>The <parameter>Addresses</parameter> parameter specifices the onion address
                            (<code>address.onion</code>) and a port (1234) over which the gateway
                        node can be reached by way of the Tor network. This value is periodically
                        advertised in the PKI document to other components of the mix
                        network.</para>
                </listitem>
                <listitem>
                    <para>The <parameter>BindAddresses</parameter> parameter specifies the loopback
                        address (127.0.0.1) and a port (1234) on which the node listens for incoming
                        Sphinx packets from clients.</para>
                </listitem>
                <listitem>
                    <para>The gateway node also has a LAN address, 192.168.0.2, which does not
                        appear in the &program_name; configuration, but is
                        <?oxy_comment_start author="dwrob" timestamp="20250123T124901-0800" comment="Is this an acceptable thing to say?"?>logically
                        equivalent<?oxy_comment_end?> to the node's loopback address,
                        127.0.0.1.</para>
                </listitem>
                <listitem>
                    <para>The NAT router has two configured addresses, public address 203.0.113.10,
                        and LAN address 192.168.0.1, which in this case play no role in the
                        &program_name; configuration.</para>
                </listitem>
                <listitem>
                    <para>The NAT device routes traffic for 203.0.113.10:1234 to the LAN address and
                        port of the gateway node, 192.168.0.2:1234, and therefore to the configured
                        onion service listener bound to 127.0.0.1:1234.</para>
                </listitem>
            </itemizedlist>
            

<!--  
Snippet from a client.toml configuration file, containing the PKI infomration .               
                
<programlisting>[PinnedGateways]                    
    [[PinnedGateways.Gateways]]
    WireKEMScheme = "xwing"
    Name = "gateway1"
    IdentityKey = "-\-\-\-\-BEGIN ED25519 PUBLIC KEY-\-\-\-\-\naJaBWi498i7smuA9JrZq0uHUZ4yrIv3OTAAnhWeoqOE=\n-\-\-\-\-END ED25519 PUBLIC KEY-\-\-\-\-\n"
    LinkKey = "-\-\-\-\-BEGIN XWING PUBLIC KEY-\-\-\-\-\nioBUTSlbNbR3raBKhHKfFzRlt9Vc1iKfzuh7b4HJiDcDqvw4VxtVpKoSE+WAYOlR\nLfaWp9Wd3qqeiyc8EQysWfeeBEtslsk/4aJWF+xQTYxjF/Sqb2ktJuuNkKRmDCVr\n20Voy+g/h+NnSXiB8PBjFIPJnZKi8JEynAfJ1iFLVwOggHfDtSehT5R2l2gjLgCZ\ncHBvm0W8rAM751N00IBXGGVPDWiNF/lNSyeQbnF2v3lKcEQ1xZIzp4MdtlWETEs/\nB6Fqi3Agk9hVUQOF+8VBbGZnJ/yP14hPFOK1C4OnzXJXTJJT3rWFRuwl/HMzlbil\nmIeYqRE2HHd2C9Gf8koLPalnYknDqHduAxWfcixPvbeVY0YFpjk48DoZZOlpCVuT\nLmkbkPPB0OolkpRQNHKpfpDKANh3BvA1Y8gywVdvKvpL6DSWZvgt2rlhdTUgL6rC\nhNEpR8TJTKqkTawiHaugAoFodxajm3I9ITEORxAm00Clu4GP8Juty9KyVdRKjxBf\nK5sSEEfKwmxTTakOrFN80wu2sHEIIFguqUzHuOS3UAejNgigIJIISdOOKZDH86Z6\nO3RdcPxc/TST85mRLhGxw+ekQigKd1SWmEKKmpccYqwL2redvmdXP4rPf6Auxviu\ne3WtgkpAN/lc87W0kDa0uCVsPZxm/TyDbnm2krLNUdRhT5lX0nsHMjlf4SE3I3E/\nh7cPckkjNCm994NcIus7eNAWUDK5ePSSOLyhXoE6uDsjWPM0piFHZxRLbIrBPGfK\ndsWTK3GPvSGK8KVcFFMaZBmy87u+vMhnXvCkNpxP9GEeucGTHKSqNxu97sG/PvoN\n95KX9qW+LPCOCTUXyAN4A1ovqCAjJcOuxAqfzvZq3Eo3T1arniyxI3Epz7RMLLqi\nbqt+S1F0C3RMFxk0EBd+6SENSgGuV7d+cPCrQKhK03NTGxxjYVihm4EPNVtk22jO\n91IGccIFbtJ2eTWnrclmRCeOFil+SHHIDrc981pCSSOWABxkT5exthc5mXy0IIHL\n4KzPydqUABVAfwR3euQSkllxjdG4ISt4CPixnWBO0npKquljJvh2g/gIpHMih/u5\nxklmUsCFWkh5eQWCcJKyOjJL6EK2ZGBu1UV8ebpcdtKx6/SO2/I7ivQe5fw6DaSo\nibdcn/S8uEHOMYgD21BDLKxJCiAQjHRzNCO9q/WaXhVNObCjTBaqAMxGWVN0Q7BW\n+IBrutzBeQfP7XgBgpRuMzm6i8tskJB59pQ/UwAHd6WfqHgD2jwJfbdcbPcUYSwA\njrNbcWVgIobHHAXBcwdHmSkVa2Gs9pA1PvjDFsQv9bdkjGZ1VJSx3hUmhKpoGoVl\nAKO/X6IjfRUXKst74hEgl7q6JpVjlJAjkGpR9cpJ17Q1cOdxFvOKxnBeSFasUQPF\nFQZEt3qmsDw/KQoxUNmBvJClWaogXElFu/K8HNR3FAaZEjSbLaiem8aXBJayTvKL\n3eaFgrwQqbctQBhMvRoJ2qRMbNIn8GJ5hKWQjLggtoPDdXSKjXM2OoAReSaeCKAf\n9uEgW8tVo7cejCOl9TiuuRj1kijUzO5pv5t1gEdakiHEMIQpIF6oaqcrDkiC48Ha\n7yIlFZf8uYpoDekvHz4NWQ==\n-\-\-\-\-END XWING PUBLIC KEY-\-\-\-\-\n"
    PKISignatureScheme = "Ed25519"
    Addresses = ["tcp://127.0.0.1:30004", "quic://[::1]:30005", "onion://address.onion:1234"]</programlisting>
-->

        </section>
    </section>   
</article>
